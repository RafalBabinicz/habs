Index: habs/haskell-resourcet/src/resourcet-1.1.2/Control/Monad/Trans/Resource/Internal.hs
===================================================================
--- habs.orig/haskell-resourcet/src/resourcet-1.1.2/Control/Monad/Trans/Resource/Internal.hs
+++ habs/haskell-resourcet/src/resourcet-1.1.2/Control/Monad/Trans/Resource/Internal.hs
@@ -53,7 +53,7 @@ import Control.Monad.IO.Class (MonadIO (
 import Control.Monad (liftM, ap)
 import qualified Control.Exception as E
 import Control.Monad.ST (ST)
-import Control.Monad.Catch (MonadThrow (..), MonadCatch (..))
+import Control.Monad.Catch (MonadThrow (..), MonadCatch (..), MonadMask (..))
 import Data.IntMap (IntMap)
 import qualified Data.IntMap as IntMap
 import qualified Data.IORef as I
@@ -145,6 +145,7 @@ instance MonadThrow m => MonadThrow (Res
 instance MonadCatch m => MonadCatch (ResourceT m) where
   catch (ResourceT m) c =
       ResourceT $ \r -> m r `catch` \e -> unResourceT (c e) r
+instance MonadMask m => MonadMask (ResourceT m) where
   mask a = ResourceT $ \e -> mask $ \u -> unResourceT (a $ q u) e
     where q u (ResourceT b) = ResourceT (u . b)
   uninterruptibleMask a =
